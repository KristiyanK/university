#include <iostream>
using namespace std;
void solve() {
	int n, m;
	cin >> n;
	int B[100];
	for (int i = 0; i < n; i++) cin >> B[i];
	cin >> m;
	int A[100][100];
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) A[i][j] = -1;
	}
	int x, y;
	for (int i = 0; i < m; i++) {
		cin >> x >> y;
		x--;
		y--;
		A[x][y] = B[x];
		A[y][x] = B[y];
	}
	int visit[100], dist[100];
	for (int i = 0; i < n; i++) {
		visit[i] = 0;
		dist[i] = 100000;
	}
	dist[0] = 0;

	for (int k = 0; k < n; k++) {
		int min = 100000, p;
		for (int i = 0; i < n; i++) {
			if (min > dist[i] && visit[i] == 0) {
				min = dist[i];
				p = i;
			}
		}
		if (min != 100000) {
			visit[p] = 1;
			for (int i = 0; i < n; i++) {
				if (A[p][i] != -1 && visit[i] == 0 && dist[p] + A[p][i] < dist[i])
					dist[i] = dist[p] + A[p][i];
			}
		}
		else break;
	}
	if (dist[n - 1] < 100000)
	cout << dist[n - 1] << endl;
	else cout << -1 << endl;
	
}

int main() {
	int t;
	cin >> t;

	for (; t > 0; t--) solve();
	return 0;
}
/*
2
4
1 10 2 15
4
1 2
1 3
4 2
4 3
4
1 10 2 15
0
*/
